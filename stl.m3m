import pythoncom
from win32com.client import Dispatch, gencache
import traceback


class StlExport:
    def __init__(self):
        #  Подключим константы API Компас
        self.kompas6_constants = gencache.EnsureModule("{75C9F5D0-B5B8-4526-8681-9903C567D2ED}", 0, 1, 0).constants
        self.kompas6_constants_3d = gencache.EnsureModule("{2CAF168C-7961-4B90-9DA2-701419BEEFE3}", 0, 1, 0).constants

        #  Подключим описание интерфейсов API5
        self.kompas6_api5_module = gencache.EnsureModule("{0422828C-F174-495E-AC5D-D31014DBBE87}", 0, 1, 0)

        self.kompas_object = self.kompas6_api5_module.KompasObject(
            Dispatch("Kompas.Application.5")._oleobj_.QueryInterface(
                self.kompas6_api5_module.KompasObject.CLSID,
                pythoncom.IID_IDispatch
            )
        )

        kompas_api7_module = gencache.EnsureModule("{69AC2981-37C0-4379-84FD-5DD2F3C0A520}", 0, 1, 0)
        kompas_api_object = kompas_api7_module.IKompasAPIObject(
            Dispatch("Kompas.Application.7")._oleobj_.QueryInterface(
                    kompas_api7_module.IKompasAPIObject.CLSID,
                    pythoncom.IID_IDispatch
                )
            )

        self.application = kompas_api_object.Application
        self.doc = self.application.ActiveDocument

        self.iDocument3D = self.kompas_object.ActiveDocument3D()

        if self.iDocument3D:
            self.save_to_stl()
            return

        self.application.MessageBoxEx("Невозможно сохранить этот документ в STL", "", 64)



    def convert_to_stl(self, doc, resultPath):
        additionFormat = doc.AdditionFormatParam()
        additionFormat.Init()  # старт инициализации параметров
        additionFormat.format = self.kompas6_constants_3d.format_STL  # STL
        additionFormat.formatBinary = True  # true - бинарный формат, false - текстовый формат
        additionFormat.lengthUnits = self.kompas6_constants.ksLUnMM  # единицы измерения длины, мм (см. ksLengthUnitsEnum)
        additionFormat.step = 0.05  # максимальное линейное отклонение
        additionFormat.angle = 3.5  # максимальное угловое отклонение
        # additionFormat.length = 15.792824  # максимальная длина ребра
        additionFormat.GetObjectsOptions(
            self.kompas6_constants_3d.ksD3COSurfaces)  # ksD3ConverterOptionsEnum - Константы управляющие разрешением на чтение или запись объектов в дополнительные форматы

        result = doc.SaveAsToAdditionFormat(resultPath, additionFormat)
        if result:
            self.application.MessageBoxEx("Успешно сохранено!\n\n{}".format(resultPath), "", 64)
        else:
            raise Exception('SaveAsToAdditionFormat returned false')

    def save_to_stl(self):
        try:
            if not self.doc.Path:
                self.kompas_object.ksMessage('Невозможно экспортировать несохраненный документ')
                return

            stl_path = "{}{}.stl".format(self.doc.Path, self.doc.Name[:-4])
            self.convert_to_stl(self.iDocument3D, stl_path)
        except Exception:
            msg = "При сохранении в STL произошла ошибка:\n\n{}".format(traceback.format_exc())
            self.kompas_object.ksMessage(msg)

if __name__ == "__main__":
    StlExport()
